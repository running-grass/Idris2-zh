# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2023, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-16 09:52+0800\n"
"PO-Revision-Date: 2022-09-03 13:48+0000\n"
"Last-Translator: grass <hi@grass.show>\n"
"Language-Team: Chinese (Simplified) <>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../source/backends/index.rst:5 9c143027051c4ba0b1cd29b7faf5ef47
msgid "Compiling to Executables"
msgstr "编译为可执行文件"

#: ../source/backends/index.rst:9 cbbdc0c69c104ebb98942895dfcbb5d8
msgid ""
"The documentation for Idris has been published under the Creative Commons"
" CC0 License. As such to the extent possible under law, *The Idris "
"Community* has waived all copyright and related or neighboring rights to "
"Documentation for Idris."
msgstr ""
"Idris 的文档已在知识共享 CC0 许可下发布。因此，在法律允许的范围内，*Idris "
"社区* 已经放弃了 Idris 文档的所有版权和相关或邻近的权利。"

#: ../source/backends/index.rst:14 340cc16505474ee991c35c383d1b79b0
msgid ""
"More information concerning the CC0 can be found online at: "
"http://creativecommons.org/publicdomain/zero/1.0/"
msgstr "关于CC0的更多信息，可以在网上找到：http://creativecommons.org/publicdomain/"
"zero/1.0/"

#: ../source/backends/index.rst:16 0024aad2f5424d44b510e9b8a263596f
msgid ""
"Idris 2 (the language) is designed to be independent of any specific code"
" generator. Still, since the point of writing a program is to be able to "
"run it, it's important to know how to do so! By default, Idris compiles "
"to executables via `Chez Scheme <https://www.scheme.com/>`_."
msgstr ""
"Idris 2（语言）被设计为不依赖于任何特定的代码生成器。不过，由于编写程序的重点"
"是能够运行它，所以知道如何运行是很重要的,默认情况下，Idris通过 `Chez Scheme "
"<https://www.scheme.com/>`_ 编译为可执行文件。"

#: ../source/backends/index.rst:21 64f3d6eaaf844e7ea4b5e30efb951181
msgid "You can compile to an executable as follows, at the REPL:"
msgstr "你可以在 REPL 中按如下方式编译到可执行文件："

#: ../source/backends/index.rst:27 19da836d9a4544cba34e852784d936ec
msgid ""
"...where ``execname`` is the name of the executable file to generate, and"
" ``expr`` is the Idris expression which will be executed. ``expr`` must "
"have type ``IO ()``. This will result in an executable file ``execname``,"
" in a directory ``build/exec``, relative to the current working "
"directory."
msgstr ""
"...其中 ``execname`` 是要生成的可执行文件的名称， ``expr`` 是将被执行的 "
"Idris 表达式。 ``expr`` 必须拥有 ``IO ()`` 的类型。这将产生一个可执行文件 "
"``execname`` ，在相对于当前工作目录的 ``build/exec`` 目录下。"

#: ../source/backends/index.rst:32 33b4ed0d946f4a748e939eab6ac1f11a
msgid "You can also execute expressions directly:"
msgstr "你也可以直接执行表达式："

#: ../source/backends/index.rst:38 b1e65932b45c432baace5997dce8fa61
msgid "Again, ``expr`` must have type ``IO ()``."
msgstr "同样， ``expr`` 也必须要有类型 ``IO ()`` 。"

#: ../source/backends/index.rst:40 764c0c3976154e53a8d88341ca83c790
msgid ""
"Finally, you can compile to an executable from the command line by adding"
" the ``-o <output file>`` option:"
msgstr "最后，你可以通过添加 ``-o <output file>`` 选项从命令行编译为可执行文件："

#: ../source/backends/index.rst:47 25b2024ca7b94cdcbdee8568fa9d258e
msgid ""
"This will compile the expression ``Main.main``, generating an executable "
"``hello`` (with an extension depending on the code generator) in the "
"``build/exec`` directory."
msgstr ""
"将编译表达式 ``Main.main`` ，在 ``build/exec`` 目录下生成一个可执行的 "
"``hello`` （根据代码生成器的不同，可能会有一个文件扩展名）。"

#: ../source/backends/index.rst:51 0c77b5358b07495e964a6c02f2b9443f
msgid ""
"By default, Idris 2 is a whole program compiler - that is, it finds all "
"the necessary function definitions and compiles them only when you build "
"an executable. This gives plenty of optimisation opportunities, but can "
"also be slow for rebuilding. However, if the backend supports it, you can"
" build modules and executables *incrementally*:"
msgstr ""
"默认情况下，Idris 2 是一个完整的程序编译器 - 也就是说，它找到所有必要的函数定"
"义，并在你构建可执行文件时才编译它们。这提供了大量的优化机会，但对于重新构建"
"来说可能会很慢。然而，如果后端支持的话，你可以 *增量* 构建模块和可执行文件："

#: ../source/backends/index.rst:62 3bc6a6dfcfc841edbf461e62c3150fba
msgid ""
"If the backend supports it, you can generate profiling data by setting "
"the ``profile`` flag, either by starting Idris with ``--profile``, or "
"running ``:set profile`` at the REPL. The profile data generated will "
"depend on the back end you are using. Currently, the Chez and Racket back"
" ends support generating profile data."
msgstr ""
"如果后端支持，你可以通过设置 ``profile`` 标志来生成配置数据，或者用 "
"``--profile`` 启动 Idris，或者在 REPL 运行 ``:set profile`` "
"。生成的配置数据将取决于你所使用的后端。目前， Chez 和 Racket "
"后端支持生成配置数据。"

#: ../source/backends/index.rst:68 24c7845b73a9460f818f60a3327efe0b
msgid ""
"There are five code generators provided in Idris 2, and there is a system"
" for plugging in new code generators for a variety of targets. The "
"default is to compile via Chez Scheme, with an alternative via Racket or "
"Gambit. You can set the code generator at the REPL with the `:set "
"codegen` command, or via the `IDRIS2_CG` environment variable."
msgstr ""
"Idris 2 "
"中提供了五个代码生成器，并且有一个系统可以为各种目标语言插入新的代码生成器。"
"默认是通过 Chez Scheme 编译，还有一个选择是通过 Racket 或 Gambit 编译。"
"你可以在REPL中用 `:set codegen` 命令设置代码生成器，或者通过 `IDRIS2_CG` "
"环境变量进行设置。"

#: ../source/backends/index.rst:85 385e423f8d4c4e07853f7fcc1a5d2255
msgid ""
"There are also external code generators that aren't part of the main "
"Idris 2 repository and can be found on Idris 2 wiki:"
msgstr "还有一些其它的代码生成器，它们不是Idris 2 主资源库的一部分，你可以在 Idris 2 "
"维基上找到："

#: ../source/backends/index.rst:88 ab436d7c6ad245b49d916d82e444e10d
msgid ""
"`External backends <https://github.com/idris-lang/Idris2/wiki/External-"
"backends>`_"
msgstr ""
"`外部后端 <https://github.com/idris-lang/Idris2/wiki/External-"
"backends>`_"

#: ../source/backends/index.rst:90 82a3334ad43d419f9879a343a7b7ab76
msgid ""
"There is work in progress support for generating libraries for other "
"languages from idris2 code."
msgstr "目前正在进行的工作是支持从 idris2 代码生成其他语言的库。"
